{"pageProps":{"postData":{"id":"1","contentHtml":"\n<h1>Lorem ipsum</h1>\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus at metus vel urna semper sollicitudin. Morbi non erat eleifend, bibendum eros vel, bibendum felis. Sed vehicula, augue accumsan scelerisque mattis, mauris metus commodo elit, ac vestibulum nisi sapien non enim. Donec egestas dolor sit amet mattis cursus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed eget consequat nisi, sit amet finibus elit. Phasellus vitae bibendum tellus, nec accumsan libero. Pellentesque posuere, mauris vel ornare venenatis, nulla nisi porttitor ex, non mattis sem arcu ac ex. Donec non eros ac dolor luctus maximus. Curabitur in felis et tellus commodo semper sed ac leo.</p>\n<ul>\n  <li>Nunc pharetra dolor non quam posuere porta.</li>\n  <li>In nec ipsum a sapien hendrerit convallis.</li>\n  <li>In tincidunt neque sed nisl faucibus lobortis.</li>\n  <li>Aenean vitae ipsum non enim gravida ullamcorper.</li>\n  <li>Vestibulum suscipit est at consequat malesuada.</li>\n  <li>Donec tempor risus vel arcu ullamcorper interdum.</li>\n</ul>\n<div class=\"remark-highlight\">\n  <pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">lorem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ipsum<span class=\"token punctuation\">,</span> dolor <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">const</span> sit <span class=\"token operator\">=</span> ipsum <span class=\"token operator\">==</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> ipsum<span class=\"token punctuation\">.</span><span class=\"token property-access\">sit</span><span class=\"token punctuation\">;</span>\n\tdolor <span class=\"token operator\">=</span> sit <span class=\"token operator\">-</span> <span class=\"token function\">amet</span><span class=\"token punctuation\">(</span>dolor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword control-flow\">return</span> sit <span class=\"token operator\">?</span> <span class=\"token function\">consectetur</span><span class=\"token punctuation\">(</span>ipsum<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dolor <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> dolor<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">adipiscing</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token spread operator\">...</span>elit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>elit<span class=\"token punctuation\">.</span><span class=\"token property-access\">sit</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">const</span> sed <span class=\"token operator\">=</span> elit<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword control-flow\">return</span> eiusmod<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">tempor</span><span class=\"token punctuation\">(</span>sed<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> sed <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>sed<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">incididunt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">ipsum<span class=\"token punctuation\">,</span> ut <span class=\"token operator\">=</span> <span class=\"token number\">1</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tut <span class=\"token operator\">=</span> labore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">et</span><span class=\"token punctuation\">(</span><span class=\"token function\">amet</span><span class=\"token punctuation\">(</span>ut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> sit <span class=\"token operator\">=</span> ipsum <span class=\"token operator\">==</span> <span class=\"token keyword null nil\">null</span> <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> ipsum<span class=\"token punctuation\">.</span><span class=\"token property-access\">sit</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>sit <span class=\"token operator\">||</span> ut <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword control-flow\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">let</span> dolore <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">let</span> magna <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">const</span> aliqua <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">eiusmod</span><span class=\"token punctuation\">(</span>labore<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">ut</span><span class=\"token punctuation\">(</span>sit <span class=\"token operator\">/</span> ut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword control-flow\">while</span> <span class=\"token punctuation\">(</span>dolore <span class=\"token operator\">&#x3C;</span> sit<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\taliqua<span class=\"token punctuation\">[</span>magna<span class=\"token operator\">++</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">consectetur</span><span class=\"token punctuation\">(</span>ipsum<span class=\"token punctuation\">,</span> dolore<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>dolore <span class=\"token operator\">+=</span> ut<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword control-flow\">return</span> aliqua<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>\n"}},"__N_SSG":true}